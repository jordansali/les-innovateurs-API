<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JeopardyWebApp</name>
    </assembly>
    <members>
        <member name="T:JeopardyWebApp.Data.IJeopardyRepository">
            <summary>
            Interface for Category Repository
            </summary>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.GetAllCategories">
            <summary>
            Get a list of all categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.GetCategoryById(System.Int32)">
            <summary>
            Get category by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.AddCategory(JeopardyWebApp.Data.Entities.Categories)">
            <summary>
            Add a category
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.DeleteCategory(JeopardyWebApp.Data.Entities.Categories)">
            <summary>
            Delete a category
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.GetAllQuestions">
            <summary>
            Get a list of all questions
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.GetQuestionById(System.Int32)">
            <summary>
            Get question by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.GetRandomQuestion">
            <summary>
            Get question randomly
            </summary>
            <returns></returns>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.GetQuestionsByPoints(System.Int32)">
            <summary>
            Get a list of question by point value
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.AddQuestion(JeopardyWebApp.Data.Entities.Questions)">
            <summary>
            Add a question
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:JeopardyWebApp.Data.IJeopardyRepository.DeleteQuestion(JeopardyWebApp.Data.Entities.Questions)">
            <summary>
            Delete a question
            </summary>
            <param name="entity"></param>
        </member>
    </members>
</doc>
